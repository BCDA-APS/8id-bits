'''
Replacement for ipython profile
'''

import time

from aps_8id_bs_instrument.utils.iconfig_loader import iconfig
from aps_8id_bs_instrument.utils.session_logs import logger
from bluesky import plan_stubs as bps  # noqa
from bluesky import plans as bp  # noqa
from bluesky.magics import BlueskyMagics
from apstools.plans import lineup2
from IPython import get_ipython
import matplotlib.pyplot as plt

logger.info(__file__)
plt.ion()

_ip = get_ipython()
if _ip is not None:
    _xmode_level = iconfig.get("XMODE_DEBUG_LEVEL", "Minimal")
    _ip.register_magics(BlueskyMagics)
    _ip.run_line_magic("xmode", _xmode_level)
    logger.info("xmode exception level: '%s'", _xmode_level)
    del _ip


#start timer
t0 = time.monotonic()
from aps_8id_bs_instrument.initialize_bs_tools import (  # noqa: F401
    RE,
    bec,
    cat,
    oregistry,
    peaks,
    sd,
)
from aps_8id_bs_instrument.data_collection import *  # noqa

if iconfig.get("WRITE_SPEC_DATA_FILES", False):
    if specwriter is not None:
        RE.subscribe(specwriter.receiver)
        logger.info(f"writing to SPEC file: {specwriter.spec_filename.resolve()}")
        logger.info("   >>>>   Using default SPEC file name   <<<<")
        logger.info("   file will be created when bluesky ends its next scan")
        logger.info("   to change SPEC file, use command:   newSpecFile('title')")

oregistry.auto_register = False

print(f"Finished initalization in {time.monotonic() - t0:.2f} seconds.")

# happi requires db underneath: might be overkill
